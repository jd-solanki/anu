name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
    branches: main
  pull_request:
    paths-ignore:
      - "docs/**"
    branches: main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: ['lts/*']

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build Anu
        run: pnpm build

      - name: Cache dist
        uses: actions/cache@v3
        with:
          path: packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-${{ github.sha }}

  # test:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       node: ['lts/*']

  #   timeout-minutes: 10

  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: corepack enable
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #         cache: "pnpm"

  #     - name: Install dependencies
  #       run: pnpm install

  #     - name: Run unit tests
  #       run: pnpm run --filter=anu-vue test --reporter=junit --outputFile=../../test-results.xml

  #     - name: Add tests results to artifacts
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: test-results-${{ runner.os }}-${{ matrix.node }}
  #         path: test-results.xml

  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['lts/*']

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

  build-release:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-release]') &&
      !contains(github.event.head_commit.message, 'chore') &&
      !contains(github.event.head_commit.message, 'docs')
    needs:
      - build
      - lint
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['lts/*']

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Restore dist cache
        uses: actions/cache@v3
        with:
          path: packages/*/dist
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-${{ github.sha }}

      - name: Release Edge
        run: ./scripts/release-edge.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
